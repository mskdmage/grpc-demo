FROM rust:1.83-alpine AS chef
USER root

# Install build dependencies
RUN apk update && apk add --no-cache \
    musl-dev \
    gcc \
    libc-dev \
    pkgconfig \
    openssl-dev \
    git

# Install cargo-chef
RUN cargo install cargo-chef

WORKDIR /microservice-project

FROM chef AS planner
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

FROM chef AS builder
COPY --from=planner /microservice-project/recipe.json recipe.json

# Build dependencies - this is the caching Docker layer!
RUN cargo chef cook --release --recipe-path recipe.json

# Install protobuf compiler
RUN apk add --no-cache protobuf-dev

# Build application
COPY . .
RUN cargo build --release --bin auth

# We do not need the Rust toolchain to run the binary!
FROM debian:buster-slim AS runtime
WORKDIR /microservice-project
COPY --from=builder /microservice-project/target/release/auth /usr/local/bin
ENTRYPOINT ["/usr/local/bin/auth"]
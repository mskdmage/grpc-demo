name: Build, Test and Deploy to Prod

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Install protoc
      uses: arduino/setup-protoc@v1

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Build and test code
      run: |
        cargo build --verbose
        cargo test --verbose

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      uses: docker/bake-action@v2.3.0
      with:
        push: true
        set: |
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Deploy
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ vars.DROPLET_IP }}
        username: root
        password: ${{ secrets.DROPLET_PASSWORD }}
        script: |
          echo "Starting deployment..."
          cd ~
          echo "Creating docker-compose.yaml..."
          cat > docker-compose.yaml << 'EOF'
          services:
            health-check:
              image: mskdmage/health-check
              build:
                context: .
                dockerfile: Dockerfile-health
              restart: "always"
              depends_on:
                auth:
                  condition: service_started
            auth:
              image: mskdmage/auth
              build:
                context: .
                dockerfile: Dockerfile-auth
              restart: "always"
              ports:
                - "50051:50051"
          EOF
          echo "Stopping existing containers..."
          docker-compose down
          echo "Pulling latest images..."
          docker-compose pull
          echo "Starting services..."
          docker-compose up -d
          echo "Deployment completed successfully!"